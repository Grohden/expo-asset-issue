import fs from 'fs';
import path from 'path';
import { camelCase, pascalCase } from 'change-case';

const __dirname = import.meta.dirname;
const assetsDir = path.resolve(__dirname, '../src/assets');
const imagesDir = path.resolve(assetsDir, 'images');

const extRegex = /\..*$/;
const seqRegex = /-(\d+)/g;
const sanitizeName = (name) =>
  name.replace(extRegex, '').replace(seqRegex, '$1');

function generateBarrel(dir, fmtExportExpr) {
  const files = fs.readdirSync(dir);
  const barrelFile = path.resolve(dir, 'index.ts');
  const barrelContent = files
    .filter((file) => !file.endsWith('.ts'))
    .map((file) => fmtExportExpr(sanitizeName(file), file))
    .sort((a, b) => a.localeCompare(b))
    .join('\n');

  fs.writeFileSync(
    barrelFile,
    [
      "// generated by yarn codegen:assets, don't manually edit\n",
      barrelContent,
      '',
    ].join('\n'),
  );
}

// for expo assets we'll need to use require
generateBarrel(
  imagesDir,
  (name, file) => `export const ${camelCase(name)} = require('./${file}');`,
);
